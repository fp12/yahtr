#:kivy 1.9.1
##:include src/ui/kv/debug.kv
#:include src/ui/kv/piece.kv
#:include src/ui/kv/time_bar.kv


<Tile>
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Mesh:
            vertices: (self.x + self.coss[0] * self.radius, self.y + self.sins[0] * self.radius, 0, 0, self.x + self.coss[1] * self.radius, self.y + self.sins[1] * self.radius, 0, 0, self.x + self.coss[2] * self.radius, self.y + self.sins[2] * self.radius, 0, 0, self.x + self.coss[3] * self.radius, self.y + self.sins[3] * self.radius, 0, 0, self.x + self.coss[4] * self.radius, self.y + self.sins[4] * self.radius, 0, 0, self.x + self.coss[5] * self.radius, self.y + self.sins[5] * self.radius, 0, 0)
            indices: (0, 1, 2, 3, 4, 5)
            mode: "triangle_fan"
    Label:
        index: 0
        size: root.size
        center: root.pos
        text: root.debug_label
        color: 1, 0, 0, 1


<Selector>:
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Line:
            points: [self.x + self.coss[0] * (self.radius + self.margin/2), self.y + self.sins[0] * (self.radius + self.margin/2), self.x + self.coss[1] * (self.radius + self.margin/2), self.y + self.sins[1] * (self.radius + self.margin/2), self.x + self.coss[2] * (self.radius + self.margin/2), self.y + self.sins[2] * (self.radius + self.margin/2), self.x + self.coss[3] * (self.radius + self.margin/2), self.y + self.sins[3] * (self.radius + self.margin/2), self.x + self.coss[4] * (self.radius + self.margin/2), self.y + self.sins[4] * (self.radius + self.margin/2), self.x + self.coss[5] * (self.radius + self.margin/2), self.y + self.sins[5] * (self.radius + self.margin/2)]
            joint: 'bevel'
            cap: 'none'
            width: self.margin
            close: True


<UnitActionTile>:
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Mesh:
            vertices: (self.x + self.coss[0] * self.radius, self.y + self.sins[0] * self.radius, 0, 0, self.x + self.coss[1] * self.radius, self.y + self.sins[1] * self.radius, 0, 0, self.x + self.coss[2] * self.radius, self.y + self.sins[2] * self.radius, 0, 0, self.x + self.coss[3] * self.radius, self.y + self.sins[3] * self.radius, 0, 0, self.x + self.coss[4] * self.radius, self.y + self.sins[4] * self.radius, 0, 0, self.x + self.coss[5] * self.radius, self.y + self.sins[5] * self.radius, 0, 0)
            indices: (0, 1, 2, 3, 4, 5)
            mode: "triangle_fan"
    Label:
        size: root.size
        center: root.pos
        text: root.key
        font_size: '50sp'
        markup: True
        color: root.r - 0.1, root.g - 0.1, root.b - 0.1, root.a - 0.2
    Label:
        size: root.size
        center: root.pos
        text: root.action
        color: 1, 0, 0, 1


<ActionArrow>:
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Line:
            points: [self.x, self.y-20, self.x, self.y+10, self.x-10, self.y, self.x+10, self.y, self.x, self.y+10]
            joint: 'round'
            cap: 'none'
            width: 3
            close: False
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            origin: self.pos
    canvas.after:
        PopMatrix   


<ActionUnitMove>:
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            origin: self.pos
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Line:
            points: [self.x - self.width / 2, self.y + self.height / 2, self.x, self.y + self.height, self.x + self.width / 2, self.y + self.height / 2]
            joint: 'bevel'
            cap: 'none'
            width: 3
            close: False
        Ellipse:
            size: self.size
            pos: (self.x - self.width / 2, self.y - self.height / 2)
    canvas.after:
        PopMatrix
